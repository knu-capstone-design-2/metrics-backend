version: '3.8'
services:
  zookeeper:
    image: bitnami/zookeeper:3.9
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    networks:
      - metrics-backend_default

  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka
    ports:
      - "9092:9092"      # 컨테이너 내부용 포트
      - "19092:19092"    # 호스트(PC) 접근용 포트
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      # [듀얼 리스너] 컨테이너 내부/호스트 모두에서 접근 가능하게 리스너 2개 선언 (포트 분리)
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:19092
      # [듀얼 advertised.listeners] 컨테이너 내부는 kafka:9092, 호스트는 host.docker.internal:19092로 안내
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://host.docker.internal:19092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    depends_on:
      - zookeeper
    networks:
      - metrics-backend_default
    extra_hosts:
      - "host.docker.internal:host-gateway"

  data-collector:
    build: .
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092  # 컨테이너 내부에서 kafka:9092로 접근
    depends_on:
      - kafka
    networks:
      - metrics-backend_default

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - 8080:8080
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092  # 컨테이너 내부에서 kafka:9092로 접근
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    networks:
      - metrics-backend_default

networks:
  metrics-backend_default:
    external: true
